{"version":3,"sources":["webpack:///node_modules/immutability-helper/index.js","webpack:///src/app/utils/update.ts","webpack:///src/app/weatherModule/components/favorites/favorites.component.ts","webpack:///src/app/weatherModule/components/favorites/favorites.component.html","webpack:///src/app/weatherModule/components/footer/footer.component.ts","webpack:///src/app/weatherModule/components/footer/footer.component.html","webpack:///src/app/weatherModule/components/header/header.component.ts","webpack:///src/app/weatherModule/components/header/header.component.html","webpack:///src/app/weatherModule/components/weatherbycity/forcast-card/forcast-card.component.ts","webpack:///src/app/weatherModule/components/weatherbycity/forcast-card/forcast-card.component.html","webpack:///src/app/weatherModule/components/weatherbycity/weatherbycity.component.ts","webpack:///src/app/weatherModule/components/weatherbycity/weatherbycity.component.html","webpack:///src/app/weatherModule/directives/english-only.directive.ts","webpack:///src/app/weatherModule/services/accuweather-api.service.ts","webpack:///src/app/weatherModule/services/favorites.service.ts","webpack:///src/app/weatherModule/services/geolocation.service.ts","webpack:///src/app/weatherModule/services/repository-urls.ts","webpack:///src/app/weatherModule/services/tempSelection.service.ts","webpack:///src/app/weatherModule/services/weatherAppStoreFacade.service.ts","webpack:///src/app/weatherModule/store/actions/areaWeather.action.ts","webpack:///src/app/weatherModule/store/actions/favorites.actions.ts","webpack:///src/app/weatherModule/store/effects/areaWeather.effects.ts","webpack:///src/app/weatherModule/store/reducers/areaWeather.reducer.ts","webpack:///src/app/weatherModule/store/reducers/favorites.reducer.ts","webpack:///src/app/weatherModule/store/reducers/index.ts","webpack:///src/app/weatherModule/store/selectors/areaWeather.selectors.ts","webpack:///src/app/weatherModule/store/selectors/common.ts","webpack:///src/app/weatherModule/store/selectors/favorites.selectors.ts","webpack:///src/app/weatherModule/store/selectors/index.ts","webpack:///src/app/weatherModule/store/states/areaWeather.state.ts","webpack:///src/app/weatherModule/store/states/favorites.state.ts","webpack:///src/app/weatherModule/weather-routing.module.ts","webpack:///src/app/weatherModule/weather.component.ts","webpack:///src/app/weatherModule/weather.component.html","webpack:///src/app/weatherModule/weather.module.ts"],"names":["Object","defineProperty","exports","value","stringifiable","obj","prototype","toString","call","slice","isProduction","process","invariant","condition","message","Error","hasOwnProperty","splice","Array","type","assign","target","source","getAllKeys","forEach","key","getOwnPropertySymbols","keys","concat","copy","object","isArray","constructor","length","Map","Set","create","getPrototypeOf","Context","commands","defaultCommands","update","bind","extend","isEquals","x","y","newContext","get","set","enumerable","configurable","directive","fn","$spec","_this","spec","$apply","join","nextObject","objectWasNextObject","nextValueForKey","nextObjectValue","$push","invariantPushAndUnshift","$unshift","$splice","originalObject","invariantSplices","args","invariantSplice","apply","$set","_nextObject","invariantSet","$toggle","targets","invariantSpecArray","nextObjectCopy","$unset","_spec","$add","values","invariantMapOrSet","_a","has","add","$remove","$merge","invariantMerge","original","invariantApply","defaultContext","module","command","specValue","typeOfTarget","UpdateContext","updateInternal","FavoritesComponent","favoritesService","favorites","getFavorites","pipe","a","subscribe","link","extractFromArrayAt","split","arr","index","weather","removeFromFavorites","extractName","Link","extractKey","templateUrl","styleUrls","FooterComponent","selector","HeaderComponent","router","clickFavorite","emit","ForcastCardComponent","Night","addToFavorites","WeatherbycityComponent","accuweatherApiService","geoLocationService","storeFacade","autoCompleteInput","data","getAutoComplete","suggestions","autoCompletedSuggestions","console","error","getAccuWeatherByLocation","location","setAreaWeather","Key","LocalizedName","option","autoCompleteValue","EnglishOnlyDirective","_el","event","initalValue","nativeElement","replace","stopPropagation","AccuweatherApiService","httpClient","API_KEY","url","p","params","fromObject","apikey","geoPosition","getRequest","geoposition","q","lat","lon","autoComplete","metric","forcasts","getFiveDaysForcast","currentConditions","getCurrentCondition","providedIn","FavoritesService","accuWeatherApi","favorites$","f","element","push","getCurrentConditions","zip","name","GeolocationService","geolocation","navigator","log","getCurrentPosition","position","updatgeGeolocatgion","coords","latitude","longitude","next","getGeoPosition","DefaultLocation","baseUrl","apiUrl","repositoryUrlGeoPositionUrl","repositoryUrlGeoPositioController","repositoryUrlForcastUrl","repositoryUrlForcastController","repositoryUrlCurrentConditionUrl","repositoryUrlCurrentConditionController","repositoryUrl","TempSelectionService","isCelsiusSubject","isCelsius$","asObservable","getIsCelsius","setIsCelsius","isCelsius","WeatherAppStoreService","_store","tempSelectionService","areaWeather$","areaWeatherSelectors","areaWeather","currentCityName$","areaName","currentCityKey$","areaKey","currentCityTemp$","areaTemp","temp","Metric","Value","Unit","Imperial","cuurentWeatherIcon$","areaWeatherIcon","currentWeatherText$","areaWeatherText","fiveDayForcast$","areaWeatherForcast","forcast","DailyForecasts","favoritesSelectors","dispatch","getAreaWeather","payload","addFavorite","fav","removeFavorite","isInFavorites","findIndex","AreaWeatherActionTypes","areaWeatherAction","GET_AREA_WEATHER","applyAreaWeather","APPLY_AREA_WEATHER","FavoritesActionType","favoriteAction","ADD_FAVORITE","REMOVE_FAVORITE","applyFavorite","APPLY_FAVORITE","AreaWeatherEffect","actions$","getAreaWeather$","val","get5DaysOfForecasts","cityWeather","AreaKey","AreaName","Forcast","areaWeatherReducer","state","action","reducer","favoritesReducer","CITY_WEATHER_FEATURE","reducers","Temperature","WeatherText","WeatherIcon","weatherAppSelector","weatherAppSelectors","AreaWeatherState","initialState","routes","path","component","children","redirectTo","pathMatch","WeatherRoutingModule","forChild","imports","WeatherComponent","WeatherModule","forFeature","declarations","providers"],"mappings":"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","file":"weatherModule-weather-module-es5.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction stringifiable(obj) {\n    // Safely stringify Object.create(null)\n    /* istanbul ignore next */\n    return typeof obj === 'object' && !('toString' in obj) ?\n        Object.prototype.toString.call(obj).slice(8, -1) :\n        obj;\n}\nvar isProduction = typeof process === 'object' && process.env.NODE_ENV === 'production';\nfunction invariant(condition, message) {\n    if (!condition) {\n        /* istanbul ignore next */\n        if (isProduction) {\n            throw new Error('Invariant failed');\n        }\n        throw new Error(message());\n    }\n}\nexports.invariant = invariant;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\nvar toString = Object.prototype.toString;\nfunction type(obj) {\n    return toString.call(obj).slice(8, -1);\n}\nvar assign = Object.assign || /* istanbul ignore next */ (function (target, source) {\n    getAllKeys(source).forEach(function (key) {\n        if (hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n});\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function'\n    ? function (obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)); }\n    /* istanbul ignore next */\n    : function (obj) { return Object.keys(obj); };\nfunction copy(object) {\n    return Array.isArray(object)\n        ? assign(object.constructor(object.length), object)\n        : (type(object) === 'Map')\n            ? new Map(object)\n            : (type(object) === 'Set')\n                ? new Set(object)\n                : (object && typeof object === 'object')\n                    ? assign(Object.create(Object.getPrototypeOf(object)), object)\n                    /* istanbul ignore next */\n                    : object;\n}\nvar Context = /** @class */ (function () {\n    function Context() {\n        this.commands = assign({}, defaultCommands);\n        this.update = this.update.bind(this);\n        // Deprecated: update.extend, update.isEquals and update.newContext\n        this.update.extend = this.extend = this.extend.bind(this);\n        this.update.isEquals = function (x, y) { return x === y; };\n        this.update.newContext = function () { return new Context().update; };\n    }\n    Object.defineProperty(Context.prototype, \"isEquals\", {\n        get: function () {\n            return this.update.isEquals;\n        },\n        set: function (value) {\n            this.update.isEquals = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Context.prototype.extend = function (directive, fn) {\n        this.commands[directive] = fn;\n    };\n    Context.prototype.update = function (object, $spec) {\n        var _this = this;\n        var spec = (typeof $spec === 'function') ? { $apply: $spec } : $spec;\n        if (!(Array.isArray(object) && Array.isArray(spec))) {\n            invariant(!Array.isArray(spec), function () { return \"update(): You provided an invalid spec to update(). The spec may \" +\n                \"not contain an array except as the value of $set, $push, $unshift, \" +\n                \"$splice or any custom command allowing an array value.\"; });\n        }\n        invariant(typeof spec === 'object' && spec !== null, function () { return \"update(): You provided an invalid spec to update(). The spec and \" +\n            \"every included key path must be plain objects containing one of the \" +\n            (\"following commands: \" + Object.keys(_this.commands).join(', ') + \".\"); });\n        var nextObject = object;\n        getAllKeys(spec).forEach(function (key) {\n            if (hasOwnProperty.call(_this.commands, key)) {\n                var objectWasNextObject = object === nextObject;\n                nextObject = _this.commands[key](spec[key], nextObject, spec, object);\n                if (objectWasNextObject && _this.isEquals(nextObject, object)) {\n                    nextObject = object;\n                }\n            }\n            else {\n                var nextValueForKey = type(object) === 'Map'\n                    ? _this.update(object.get(key), spec[key])\n                    : _this.update(object[key], spec[key]);\n                var nextObjectValue = type(nextObject) === 'Map'\n                    ? nextObject.get(key)\n                    : nextObject[key];\n                if (!_this.isEquals(nextValueForKey, nextObjectValue)\n                    || typeof nextValueForKey === 'undefined'\n                        && !hasOwnProperty.call(object, key)) {\n                    if (nextObject === object) {\n                        nextObject = copy(object);\n                    }\n                    if (type(nextObject) === 'Map') {\n                        nextObject.set(key, nextValueForKey);\n                    }\n                    else {\n                        nextObject[key] = nextValueForKey;\n                    }\n                }\n            }\n        });\n        return nextObject;\n    };\n    return Context;\n}());\nexports.Context = Context;\nvar defaultCommands = {\n    $push: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$push');\n        return value.length ? nextObject.concat(value) : nextObject;\n    },\n    $unshift: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$unshift');\n        return value.length ? value.concat(nextObject) : nextObject;\n    },\n    $splice: function (value, nextObject, spec, originalObject) {\n        invariantSplices(nextObject, spec);\n        value.forEach(function (args) {\n            invariantSplice(args);\n            if (nextObject === originalObject && args.length) {\n                nextObject = copy(originalObject);\n            }\n            splice.apply(nextObject, args);\n        });\n        return nextObject;\n    },\n    $set: function (value, _nextObject, spec) {\n        invariantSet(spec);\n        return value;\n    },\n    $toggle: function (targets, nextObject) {\n        invariantSpecArray(targets, '$toggle');\n        var nextObjectCopy = targets.length ? copy(nextObject) : nextObject;\n        targets.forEach(function (target) {\n            nextObjectCopy[target] = !nextObject[target];\n        });\n        return nextObjectCopy;\n    },\n    $unset: function (value, nextObject, _spec, originalObject) {\n        invariantSpecArray(value, '$unset');\n        value.forEach(function (key) {\n            if (Object.hasOwnProperty.call(nextObject, key)) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                delete nextObject[key];\n            }\n        });\n        return nextObject;\n    },\n    $add: function (values, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$add');\n        invariantSpecArray(values, '$add');\n        if (type(nextObject) === 'Map') {\n            values.forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                if (nextObject === originalObject && nextObject.get(key) !== value) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.set(key, value);\n            });\n        }\n        else {\n            values.forEach(function (value) {\n                if (nextObject === originalObject && !nextObject.has(value)) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.add(value);\n            });\n        }\n        return nextObject;\n    },\n    $remove: function (value, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$remove');\n        invariantSpecArray(value, '$remove');\n        value.forEach(function (key) {\n            if (nextObject === originalObject && nextObject.has(key)) {\n                nextObject = copy(originalObject);\n            }\n            nextObject.delete(key);\n        });\n        return nextObject;\n    },\n    $merge: function (value, nextObject, _spec, originalObject) {\n        invariantMerge(nextObject, value);\n        getAllKeys(value).forEach(function (key) {\n            if (value[key] !== nextObject[key]) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject[key] = value[key];\n            }\n        });\n        return nextObject;\n    },\n    $apply: function (value, original) {\n        invariantApply(value);\n        return value(original);\n    },\n};\nvar defaultContext = new Context();\nexports.isEquals = defaultContext.update.isEquals;\nexports.extend = defaultContext.extend;\nexports.default = defaultContext.update;\n// @ts-ignore\nexports.default.default = module.exports = assign(exports.default, exports);\n// invariants\nfunction invariantPushAndUnshift(value, spec, command) {\n    invariant(Array.isArray(value), function () { return \"update(): expected target of \" + stringifiable(command) + \" to be an array; got \" + stringifiable(value) + \".\"; });\n    invariantSpecArray(spec[command], command);\n}\nfunction invariantSpecArray(spec, command) {\n    invariant(Array.isArray(spec), function () { return \"update(): expected spec of \" + stringifiable(command) + \" to be an array; got \" + stringifiable(spec) + \". \" +\n        \"Did you forget to wrap your parameter in an array?\"; });\n}\nfunction invariantSplices(value, spec) {\n    invariant(Array.isArray(value), function () { return \"Expected $splice target to be an array; got \" + stringifiable(value); });\n    invariantSplice(spec.$splice);\n}\nfunction invariantSplice(value) {\n    invariant(Array.isArray(value), function () { return \"update(): expected spec of $splice to be an array of arrays; got \" + stringifiable(value) + \". \" +\n        \"Did you forget to wrap your parameters in an array?\"; });\n}\nfunction invariantApply(fn) {\n    invariant(typeof fn === 'function', function () { return \"update(): expected spec of $apply to be a function; got \" + stringifiable(fn) + \".\"; });\n}\nfunction invariantSet(spec) {\n    invariant(Object.keys(spec).length === 1, function () { return \"Cannot have more than one key in an object with $set\"; });\n}\nfunction invariantMerge(target, specValue) {\n    invariant(specValue && typeof specValue === 'object', function () { return \"update(): $merge expects a spec of type 'object'; got \" + stringifiable(specValue); });\n    invariant(target && typeof target === 'object', function () { return \"update(): $merge expects a target of type 'object'; got \" + stringifiable(target); });\n}\nfunction invariantMapOrSet(target, command) {\n    var typeOfTarget = type(target);\n    invariant(typeOfTarget === 'Map' || typeOfTarget === 'Set', function () { return \"update(): \" + stringifiable(command) + \" expects a target of type Set or Map; got \" + stringifiable(typeOfTarget); });\n}\n","import { extend } from 'immutability-helper';\n\nimport { Context } from 'immutability-helper';\n\n\nconst UpdateContext = new Context();\n\n\nconst updateInternal = UpdateContext.update\n\nextend('$auto', function(value, object) {\n  return object ?\n    updateInternal(object, value):\n    updateInternal({}, value);\n});\nextend('$autoArray', function(value, object) {\n  return object ?\n    updateInternal(object, value):\n    updateInternal([], value);\n});\n\nexport const update = updateInternal;\n","import { Component, OnInit, NgModule } from '@angular/core';\nimport { FavoritesService } from '../../services/favorites.service';\nimport { CityWeather } from '../../models/CityWeather';\nimport { Favorite } from '../../models/favorite';\nimport { tap, distinctUntilChanged, take } from 'rxjs/operators';\n\n@Component({\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss'],\n})\nexport class FavoritesComponent implements OnInit {\n  favorites: CityWeather[] = [];\n\n\n  constructor(public favoritesService: FavoritesService) {\n    this.favoritesService.getFavorites().pipe(\n      // distinctUntilChanged((a,b) => JSON.stringify(a) === JSON.stringify(b)),\n      tap(a => {\n        this.favorites = a;\n      })\n    ).subscribe();\n  }\n\n  ngOnInit(): void {}\n\n  extractName(link: string) {\n    return this.extractFromArrayAt(link.split('/'), 4);\n  }\n\n  extractKey(link: string) {\n    return this.extractFromArrayAt(link.split('/'), 3);\n  }\n\n  extractFromArrayAt(arr: any[], index: number) {\n    return arr[arr.length - index];\n  }\n\n  removeFromFavorites(weather: CityWeather) {\n    this.favoritesService.removeFromFavorites(\n      this.extractName(weather.Link),\n      this.extractKey(weather.Link)\n    );\n  }\n}\n","<div class=\"grid-container\">\n  <mat-card\n    class=\"card\"\n    *ngFor=\"let weather of favorites\"\n  >\n    <mat-card-header>\n      <img\n        mat-card-avatar\n        class=\"header-image\"\n        src=\"assets/weather-icons/{{ weather[0].WeatherIcon }}.png\"\n      />\n      <mat-card-title>{{extractName(weather[0].Link) | titlecase}}</mat-card-title>\n      <mat-card-subtitle>{{weather[0].LocalObservationDateTime | date: \"EEEE\"}}</mat-card-subtitle>\n      <div class=\"spacer\"></div>\n      <mat-icon\n        aria-hidden=\"false\"\n        aria-label=\"remove\"\n        (click)=\"removeFromFavorites(weather[0])\">highlight_off</mat-icon\n      >\n    </mat-card-header>\n    <mat-card-content class=\"card-content\">\n      <p class=\"weather-text\">\n        {{ weather[0].WeatherText }}\n      </p>\n      <p class=\"weather-temp\">\n        {{ weather[0].Temperature.Metric.Value + \"\" + weather[0].Temperature.Metric.Unit }}\n      </p>\n    </mat-card-content>\n  </mat-card>\n</div>\n<div class=\"empty-fav\" *ngIf=\"favorites.length === 0\">\n  <h1>Favorites Empty</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit, ViewContainerRef, ComponentFactoryResolver, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() clickFavorite: EventEmitter<any> = new EventEmitter();\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  favoriteClicked() {\n    this.clickFavorite.emit();\n  }\n\n\n}\n","<mat-toolbar color=\"primary\">\n  <span>Weather App</span>\n      <span class=\"spacer\"></span>\n      <button mat-icon-button class=\"icon\" aria-label=\"icon-button with menu icon\" routerLink=\"weatherbycity\">\n        <mat-icon>cloud</mat-icon>\n      </button>\n      <button mat-icon-button class=\"icon\" aria-label=\"icon-button with menu icon\" routerLink=\"/weather/favorites\">\n        <mat-icon>favorite</mat-icon>\n      </button>\n</mat-toolbar>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DailyForecast } from 'src/app/weatherModule/models/forcast';\n\n@Component({\n  selector: 'app-forcast-card',\n  templateUrl: './forcast-card.component.html',\n  styleUrls: ['./forcast-card.component.css']\n})\nexport class ForcastCardComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() forcast: DailyForecast;\n\n  ngOnInit(): void { }\n\n}\n","<mat-card class=\"card\">\n  <mat-card-header class=\"card-header\">\n    <mat-card-title>{{ this.forcast.Date | date:'EEEE' }}</mat-card-title>\n  </mat-card-header>\n  <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\n  <mat-card-content class=\"card-content\">\n    <img mat-card-avatar class=\"header-image\" src=\"assets/weather-icons/{{this.forcast.Day.Icon}}.png\">\n    <mat-card-title>{{ this.forcast.Temperature.Maximum.Value + '' + this.forcast.Temperature.Maximum.Unit}}</mat-card-title>\n    <label>{{ this.forcast.Day.IconPhrase }}</label>\n  </mat-card-content>\n  <hr>\n  <mat-card-footer class=\"card-footer\">\n    <img mat-card-avatar class=\"example-header-image\" src=\"assets/weather-icons/{{this.forcast.Night.Icon}}.png\">\n    <mat-card-subtitle class=\"night-text\"> Night {{ this.forcast.Temperature.Minimum.Value + '' + this.forcast.Temperature.Minimum.Unit}} - {{ this.forcast.Night.IconPhrase }}</mat-card-subtitle>\n  </mat-card-footer>\n</mat-card>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AccuweatherApiService } from '../../services/accuweather-api.service';\nimport {\n  filter,\n  takeUntil,\n  debounceTime,\n  switchMap,\n  map,\n  tap,\n  count,\n  skip,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { ModuleState } from '../../store/states';\nimport { autoCompleteOption } from '../../models/autocomplete';\nimport { WeatherAppStoreService } from '../../services/weatherAppStoreFacade.service';\nimport { GeolocationService } from '../../services/geolocation.service';\n\n@Component({\n  selector: 'app-weatherbycity',\n  templateUrl: './weatherbycity.component.html',\n  styleUrls: ['./weatherbycity.component.css'],\n})\nexport class WeatherbycityComponent implements OnInit, OnDestroy {\n  autoCompleteValue: any;\n  autoCompletedSuggestions: any[];\n  autoCompleteInput: Subject<String> = new Subject<String>();\n\n  constructor(\n    private accuweatherApiService: AccuweatherApiService,\n    private geoLocationService: GeolocationService,\n    public storeFacade: WeatherAppStoreService\n  ) {\n    this.autoCompleteInput\n      .pipe(\n        filter((data: string) => data.length > 0),\n        debounceTime(900),\n        switchMap((data: string) => {\n          const a = this.accuweatherApiService.getAutoComplete(data);\n          return a;\n        })\n      )\n      .subscribe((suggestions: autoCompleteOption[]) => {\n        this.autoCompletedSuggestions = suggestions;\n      }, console.error);\n\n    this.geoLocationService\n      .getAccuWeatherByLocation()\n      .pipe(\n        tap((location) => {\n          this.storeFacade.setAreaWeather(location.Key, location.LocalizedName);\n        })\n      )\n      .subscribe();\n  }\n\n  selectSuggestion(option: autoCompleteOption) {\n    this.autoCompleteValue = option.LocalizedName;\n    this.storeFacade.setAreaWeather(option.Key, option.LocalizedName);\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {}\n}\n","<div class=\"city-search\">\n  <mat-form-field class=\"city-search-input\">\n    <mat-label>Search By City</mat-label>\n    <input\n      type=\"text\"\n      placeholder=\"search\"\n      matInput\n      [ngModel]=\"autoCompleteValue\"\n      (input)=\"autoCompleteInput.next($event.target.value)\"\n      [matAutocomplete]=\"auto\"\n      appEnglishOnly\n    />\n    <mat-icon matSuffix>search</mat-icon>\n  </mat-form-field>\n  <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n    <mat-option\n      *ngFor=\"let suggestion of autoCompletedSuggestions\"\n      [value]=\"suggestion.LocalizedName\"\n      (click)=\"selectSuggestion(suggestion)\"\n    >\n      {{ suggestion.LocalizedName }}\n    </mat-option>\n  </mat-autocomplete>\n</div>\n<div class=\"content-wrapper\">\n  <ng-container *ngIf=\"this.storeFacade.areaWeather$ | async as areaWeather\">\n    <mat-card\n      class=\"weather-card\"\n      *ngIf=\"this.storeFacade.currentCityName$ | async as areaName\"\n    >\n      <mat-card-header class=\"weather-card-header\">\n        <img\n          mat-card-avatar\n          src=\"assets/weather-icons/{{\n            this.storeFacade.cuurentWeatherIcon$ | async\n          }}.png\"\n          class=\"weather-header-image\"\n        />\n        <mat-card-title class=\"card-city-name\">{{\n          this.storeFacade.currentCityName$ | async\n        }}</mat-card-title>\n        <mat-card-subtitle class=\"city-temp\"\n          >{{ this.storeFacade.currentCityTemp$ | async\n          }}<span>&#176;</span></mat-card-subtitle\n        >\n        <span class=\"spacer\"></span>\n        <mat-card-actions>\n          <ng-container\n            *ngIf=\"\n              this.storeFacade.isInFavorites(areaWeather.AreaKey) | async as inFavorite\n            \"\n          >\n            <button\n              mat-raised-button\n              color=\"{{ inFavorite }}\"\n              (click)=\"\n                inFavorite === 'accent'\n                  ? this.storeFacade.removeFromFavorites(areaName, areaWeather.AreaKey)\n                  : this.storeFacade.addToFavorites(areaName, areaWeather.AreaKey)\n              \"\n            >\n              <mat-icon>favorite</mat-icon>\n            </button>\n          </ng-container>\n        </mat-card-actions>\n      </mat-card-header>\n\n      <mat-card-content class=\"main-card-content\">\n        <h1>{{ this.storeFacade.currentWeatherText$ | async }}</h1>\n        <div class=\"forcast\">\n          <app-forcast-card\n            *ngFor=\"let forcast of this.storeFacade.fiveDayForcast$ | async\"\n            [forcast]=\"forcast\"\n          >\n          </app-forcast-card>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </ng-container>\n</div>\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appEnglishOnly]'\n})\nexport class EnglishOnlyDirective {\n\n  constructor(private _el:ElementRef) { }\n\n  @HostListener('input', ['$event']) onInputChange(event) {\n    const initalValue = this._el.nativeElement.value;\n    this._el.nativeElement.value = initalValue.replace(/[^a-zA-Z ]*/g, '');\n    if ( initalValue !== this._el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { repositoryUrl } from './repository-urls';\nimport { CityWeather } from '../models/CityWeather';\nimport { Forcast } from '../models/forcast';\nimport { autoCompleteOption } from '../models/autocomplete';\nimport { AccuWeatherGeo } from '../models/accuWeatherGeo';\nimport { environment } from '../../../environments/environment';\nimport { GeoLocation } from '../models/geoLocation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccuweatherApiService {\n  API_KEY = environment.API_KEY;\n\n  constructor(private httpClient: HttpClient) {}\n\n  getRequest(url, p?) {\n    if (p) {\n      const params = new HttpParams({\n        fromObject: { apikey: this.API_KEY, ...p },\n      });\n      return this.httpClient.get<any>(url, { params });\n    } else {\n      const params = new HttpParams({ fromObject: { apikey: this.API_KEY } });\n      return this.httpClient.get<any>(url, { params });\n    }\n  }\n\n  getGeoPosition(geoPosition: GeoLocation): Observable<AccuWeatherGeo> {\n    return this.getRequest(\n      repositoryUrl.geoposition.geoPosition,\n      { q: `${geoPosition.lat},${geoPosition.lon}`}\n    );\n  }\n\n  getAutoComplete(key: string): Observable<autoCompleteOption[]> {\n    return this.getRequest(repositoryUrl.geoposition.autoComplete, {q: `${key}`});\n  }\n\n  get5DaysOfForecasts(key: string, metric: boolean = true): Observable<Forcast> {\n    return this.getRequest(\n      repositoryUrl.forcasts.getFiveDaysForcast(key),\n      {metric: metric}\n    );\n  }\n\n  getCurrentConditions(key: string): Observable<CityWeather> {\n    return this.getRequest(\n      repositoryUrl.currentConditions.getCurrentCondition(key)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WeatherAppStoreService } from './weatherAppStoreFacade.service';\nimport { switchMap, take, map } from 'rxjs/operators';\nimport { AccuweatherApiService } from './accuweather-api.service';\nimport { Observable, zip, of } from 'rxjs';\nimport { CityWeather } from '../models/CityWeather';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FavoritesService {\n  constructor(\n    private storeFacade: WeatherAppStoreService,\n    private accuWeatherApi: AccuweatherApiService\n  ) {}\n\n  getFavorites() {\n    return this.storeFacade.favorites$.pipe(\n      switchMap((f) => {\n        let data: Observable<CityWeather>[] = [];\n        if(f.length === 0)\n        {\n          return of([]);\n        }\n        f.forEach((element) => {\n          data.push(this.accuWeatherApi.getCurrentConditions(element.Key));\n        });\n        return zip(...data);\n      }),\n      map(zip => zip)\n    );\n  }\n\n  getCurrentWeather(key: string) {\n    return this.accuWeatherApi.getCurrentConditions(key);\n  }\n\n  removeFromFavorites(name: string, key: string) {\n    this.storeFacade.removeFromFavorites(key, name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AccuweatherApiService } from './accuweather-api.service';\nimport { environment } from 'src/environments/environment';\nimport { GeoLocation } from '../models/geoLocation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeolocationService {\n  private geolocation: BehaviorSubject<GeoLocation> = new BehaviorSubject<GeoLocation>(null);\n\n  constructor(private accuweatherApiService:AccuweatherApiService) {\n    if (!navigator.geolocation) {\n      console.log('location is not supported');\n    }\n\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.updatgeGeolocatgion({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude,\n      } as GeoLocation);\n    });\n  }\n\n  updatgeGeolocatgion(location: GeoLocation) {\n    this.geolocation.next(location);\n  }\n\n  getGeolocation(): GeoLocation {\n    return this.geolocation.value;\n  }\n\n  getAccuWeatherByLocation() {\n    if(this.geolocation.value !== null){\n      return this.accuweatherApiService.getGeoPosition({lat: this.geolocation.value.lat, lon: this.geolocation.value.lon} as GeoLocation);\n    }else {\n      return this.accuweatherApiService.getGeoPosition(environment.DefaultLocation);\n    }\n  }\n}\n","\nimport { environment } from '../../../environments/environment';\n\nconst baseUrl = environment.apiUrl;\n\nconst repositoryUrlGeoPositionUrl = baseUrl + '/locations/v1';\nconst repositoryUrlGeoPositioController = {\n  geoPosition: repositoryUrlGeoPositionUrl + '/cities/geoposition/search',\n  autoComplete: repositoryUrlGeoPositionUrl + '/cities/autocomplete',\n}\n\n\nconst repositoryUrlForcastUrl = baseUrl + '/forecasts/v1';\nconst repositoryUrlForcastController = {\n  getFiveDaysForcast: ( key:string ) => `${repositoryUrlForcastUrl}/daily/5day/${key}`\n}\n\n\nconst repositoryUrlCurrentConditionUrl = baseUrl;\nconst repositoryUrlCurrentConditionController = {\n  getCurrentCondition: (key:string) => `${repositoryUrlCurrentConditionUrl}/currentconditions/v1/${key}`\n}\n\n\nexport const repositoryUrl = {\n  geoposition:repositoryUrlGeoPositioController,\n  forcasts: repositoryUrlForcastController,\n  currentConditions: repositoryUrlCurrentConditionController\n}\n","import { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TempSelectionService {\n\n  private isCelsiusSubject = new BehaviorSubject<boolean>(true);\n  isCelsius$ = this.isCelsiusSubject.asObservable();\n\n  constructor() {}\n\n  getIsCelsius = (): boolean => {\n    return this.isCelsiusSubject.value;\n  }\n\n  setIsCelsius = (isCelsius: boolean) => {\n    this.isCelsiusSubject.next(isCelsius);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { ModuleState } from '../store/states/index';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { weatherAppSelectors } from '../store/selectors';\nimport { DailyForecast } from '../models/forcast';\nimport { autoCompleteOption } from '../models/autocomplete';\nimport { weatherAppSelector } from '../store/selectors/common';\nimport { Favorite } from '../models/favorite';\nimport { favoriteAction } from '../store/actions/favorites.actions';\nimport { TempSelectionService } from './tempSelection.service';\nimport { async } from '@angular/core/testing';\nimport { areaWeatherAction } from '../store/actions/areaWeather.action';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherAppStoreService {\n  constructor(\n    private _store: Store<ModuleState>,\n    private tempSelectionService: TempSelectionService\n  ) {}\n\n  areaWeather$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaWeather),\n  );\n\n  currentCityName$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaName),\n    filter((option) => option !== null)\n  );\n  currentCityKey$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaKey)\n  );\n\n  currentCityTemp$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaTemp),\n    filter((temp) => temp !== null),\n    map((temp) => {\n      if (this.tempSelectionService.getIsCelsius()) {\n        return temp.Metric.Value + ' ' + temp.Metric.Unit;\n      }\n      return temp.Imperial.Value + ' ' + temp.Imperial.Unit;\n    })\n  );\n  cuurentWeatherIcon$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaWeatherIcon),\n    filter((a) => a !== null)\n  );\n\n  currentWeatherText$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaWeatherText),\n    filter((a) => a !== null)\n  );\n\n  fiveDayForcast$: Observable<DailyForecast[]> = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaWeatherForcast),\n    filter((forcast) => forcast !== null),\n    map((forcast) => forcast.DailyForecasts)\n  );\n\n  favorites$: Observable<Favorite[]> = this._store.pipe(\n    select(weatherAppSelectors.favoritesSelectors.getFavorites),\n    filter((a) => a !== null)\n  );\n\n  // currentSelectedCity$: Observable<autoCompleteOption> = this._store.pipe(\n  //   select(weatherAppSelectors.optionSelectors.selectedCity),\n  //   tap((a) => a)\n  // );\n\n  setAreaWeather = (key: string, name: string) => {\n    this._store.dispatch(\n      areaWeatherAction.getAreaWeather({\n        payload: { areaKey: key, areaName: name },\n      })\n    );\n  };\n\n  addToFavorites = (key: string, name: string) => {\n    this._store.dispatch(\n      favoriteAction.addFavorite({\n        payload: { fav: { Key: key, LocalizedName: name } },\n      })\n    );\n  };\n\n  removeFromFavorites = (key: string, name: string) => {\n    this._store.dispatch(\n      favoriteAction.removeFavorite({\n        payload: { fav: { Key: key, LocalizedName: name } },\n      })\n    );\n  };\n  isInFavorites = (key: string): Observable<'accent' | 'primary'> => {\n    return this._store.pipe(\n      select(weatherAppSelectors.favoritesSelectors.getFavorites),\n      map((favorites) => {\n        return favorites.findIndex((f) => f.Key === key) >= 0\n          ? 'accent'\n          : 'primary';\n      })\n    );\n  };\n}\n","import { createAction, props } from '@ngrx/store';\nimport { AreaWeather } from '../../models/areaWeather';\n\nenum AreaWeatherActionTypes {\n  GET_AREA_WEATHER = '[Area Weather] getAreaWeather',\n  APPLY_AREA_WEATHER = '[Area Weather] applyAreaWeather'\n}\n\nexport const areaWeatherAction = {\n  getAreaWeather: createAction(\n    AreaWeatherActionTypes.GET_AREA_WEATHER,\n    props<{ payload: { areaKey: string, areaName: string }}>()\n  ),\n  applyAreaWeather: createAction(\n    AreaWeatherActionTypes.APPLY_AREA_WEATHER,\n    props< { payload: { areaWeather: AreaWeather }}>()\n  )\n}\n","import { createAction, props } from '@ngrx/store';\nimport { autoCompleteOption } from '../../models/autocomplete';\nimport { Favorite } from '../../models/favorite';\n\n\nenum FavoritesActionType{\n  ADD_FAVORITE = '[Favorites] addFavorite',\n  REMOVE_FAVORITE = '[Favorites] removeFavorite',\n  APPLY_FAVORITE ='[Favorites] applyFavorite'\n}\n\n\nexport const favoriteAction ={\n  addFavorite: createAction(\n    FavoritesActionType.ADD_FAVORITE,\n    props<{payload: { fav: Favorite }}>()\n  ),\n  removeFavorite: createAction(\n    FavoritesActionType.REMOVE_FAVORITE,\n    props<{payload: { fav: Favorite }}>()\n  ),\n    applyFavorite: createAction(\n      FavoritesActionType.APPLY_FAVORITE,\n      props<{ payload: { favorits: string[] }}>()\n    )\n}\n","import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { AccuweatherApiService } from '../../services/accuweather-api.service';\nimport { Store } from '@ngrx/store';\nimport { ModuleState } from '../states';\nimport { areaWeatherAction } from '../actions/areaWeather.action';\nimport { switchMap, map } from 'rxjs/operators';\nimport { of, zip } from 'rxjs';\n\n@Injectable()\nexport class AreaWeatherEffect {\n  getAreaWeather$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(areaWeatherAction.getAreaWeather),\n      switchMap((val) => {\n        return zip(\n          of(val.payload),\n          this.accuweatherApiService.getCurrentConditions(val.payload.areaKey),\n          this.accuweatherApiService.get5DaysOfForecasts(val.payload.areaKey, true)\n        );\n      }),\n      map(([payload, cityWeather, forcast]) => {\n        return areaWeatherAction.applyAreaWeather({\n          payload: {\n            areaWeather: {\n              AreaKey: payload.areaKey,\n              AreaName: payload.areaName,\n              ...cityWeather[0],\n              Forcast: forcast,\n            },\n          },\n        });\n      })\n    );\n  });\n\n  constructor(\n    private actions$: Actions,\n    private accuweatherApiService: AccuweatherApiService,\n    private _store: Store<ModuleState>\n  ) {}\n}\n","import * as fromAreaWeather from '../states/areaWeather.state';\nimport { areaWeatherAction } from '../actions/areaWeather.action';\nimport { AreaWeather } from '../../models/areaWeather';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport { update } from 'src/app/utils/update';\n\nconst areaWeatherReducer = createReducer(\n  fromAreaWeather.initialState,\n  on(areaWeatherAction.applyAreaWeather, (state, action) => {\n    return update(state, { $set: action.payload.areaWeather });\n  })\n);\n\nexport function reducer(state: AreaWeather, action: Action) {\n  return areaWeatherReducer(state, action);\n}\n","import { createReducer, on, Action } from '@ngrx/store';\nimport { update } from '../../../utils/update';\nimport { favoriteAction } from '../actions/favorites.actions';\nimport * as fromFavorites from '../states/favorites.state';\nimport { autoCompleteOption } from '../../models/autocomplete';\nimport { Favorite } from '../../models/favorite';\n\nconst favoritesReducer = createReducer(\n  fromFavorites.initialState,\n  on(favoriteAction.addFavorite, (state, action) => {\n    if (\n      state &&\n      state.findIndex((arr) => arr.Key === action.payload.fav.Key) > -1\n    ) {\n      return state;\n    } else {\n      return update(state, {\n        $push: [{\n          Key: action.payload.fav.Key,\n          LocalizedName: action.payload.fav.LocalizedName,\n        }],\n      });\n    }\n  }),\n  on(favoriteAction.removeFavorite, (state, action) => {\n    if (!state) {\n      return state;\n    }\n    let index = state.findIndex((arr) => arr.Key == action.payload.fav.Key);\n    if (index < 0) {\n      return state;\n    } else {\n      return update(state, { $splice: [[index, 1]] });\n    }\n  })\n);\n\nexport function reducer(state: autoCompleteOption[], action: Action) {\n  return favoritesReducer(state, action);\n}\n","import * as FavoritesReducer from './favorites.reducer';\nimport * as AreaWeatherReducer from './areaWeather.reducer';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { ModuleState } from '../states/index';\n\nexport const CITY_WEATHER_FEATURE = 'CITY_WEATHER_FEATURE';\n\nexport const reducers: ActionReducerMap<ModuleState> = {\n  favorites: FavoritesReducer.reducer,\n  areaWeather: AreaWeatherReducer.reducer,\n}\n","import { createSelector } from '@ngrx/store';\nimport { weatherAppSelector } from './common';\nimport { ModuleState } from '../states';\n\nexport const areaWeatherSelectors = {\n  areaWeather: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather\n  ),\n  areaName: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.AreaName\n  ),\n  areaKey: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.AreaKey\n  ),\n  areaTemp: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.Temperature\n  ),\n  areaWeatherText: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.WeatherText\n  ),\n  areaWeatherIcon: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.WeatherIcon\n  ),\n  areaWeatherForcast: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.Forcast\n  ),\n};\n","import { createFeatureSelector } from '@ngrx/store';\nimport { ModuleState } from '../states';\nimport * as fromModule from '../reducers';\n\n\nexport const weatherAppSelector = createFeatureSelector<ModuleState>(fromModule.CITY_WEATHER_FEATURE);\n","import { createSelector } from '@ngrx/store';\nimport { weatherAppSelector } from './common';\nimport { ModuleState } from '../states';\n\n\nexport const favoritesSelectors = {\n  getFavorites: createSelector(\n    weatherAppSelector,\n    (state:ModuleState) => state.favorites),\n}\n","import { favoritesSelectors } from './favorites.selectors';\nimport { areaWeatherSelectors } from './areaWeather.selectors';\n\nexport const weatherAppSelectors = {\n  areaWeatherSelectors: areaWeatherSelectors,\n  favoritesSelectors: favoritesSelectors\n}\n","import { AreaWeather } from '../../models/areaWeather';\n\nexport class AreaWeatherState {\n  areaWeather: AreaWeather;\n}\n\nexport const initialState: AreaWeather = null;\n","import { autoCompleteOption } from '../../models/autocomplete';\nimport { Favorite } from '../../models/favorite';\n\n\nexport interface FavoriteState {\n  favorites: Favorite[];\n}\n\nexport const initialState:Favorite[] = [];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WeatherComponent } from './weather.component';\nimport { WeatherbycityComponent } from './components/weatherbycity/weatherbycity.component';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\n\nconst routes: Routes =\n[\n  {\n    path: '', component: WeatherComponent, children:\n      [\n        { path: '',redirectTo: 'weatherbycity', pathMatch: 'full'},\n        { path: 'weatherbycity', component: WeatherbycityComponent },\n        { path: 'favorites', component: FavoritesComponent }\n      ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n})\nexport class WeatherComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WeatherRoutingModule } from './weather-routing.module';\nimport { WeatherComponent } from './weather.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport {FooterComponent } from './components/footer/footer.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WeatherbycityComponent } from './components/weatherbycity/weatherbycity.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { ForcastCardComponent } from './components/weatherbycity/forcast-card/forcast-card.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { httpInterceptorProviders } from \"./interceptors\";\nimport { StoreModule } from '@ngrx/store';\nimport * as fromModule from './store/reducers'\nimport { EffectsModule } from '@ngrx/effects';\nimport {MatButtonModule} from '@angular/material/button';\nimport { EnglishOnlyDirective } from './directives/english-only.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AreaWeatherEffect } from './store/effects/areaWeather.effects';\n\n\n@NgModule({\n  declarations: [WeatherComponent, HeaderComponent, FooterComponent, WeatherbycityComponent, ForcastCardComponent, EnglishOnlyDirective, FavoritesComponent],\n  imports: [\n    CommonModule,\n    WeatherRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatCardModule,\n    MatAutocompleteModule,\n    EffectsModule.forFeature([AreaWeatherEffect]),\n    StoreModule.forFeature(fromModule.CITY_WEATHER_FEATURE,fromModule.reducers),\n  ],\n  providers: []\n})\nexport class WeatherModule { }\n"]}