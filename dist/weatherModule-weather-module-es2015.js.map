{"version":3,"sources":["./node_modules/immutability-helper/index.js","./src/app/utils/update.ts","./src/app/weatherModule/components/favorites/favorites.component.ts","./src/app/weatherModule/components/favorites/favorites.component.html","./src/app/weatherModule/components/footer/footer.component.ts","./src/app/weatherModule/components/footer/footer.component.html","./src/app/weatherModule/components/header/header.component.ts","./src/app/weatherModule/components/header/header.component.html","./src/app/weatherModule/components/weatherbycity/forcast-card/forcast-card.component.ts","./src/app/weatherModule/components/weatherbycity/forcast-card/forcast-card.component.html","./src/app/weatherModule/components/weatherbycity/weatherbycity.component.ts","./src/app/weatherModule/components/weatherbycity/weatherbycity.component.html","./src/app/weatherModule/directives/english-only.directive.ts","./src/app/weatherModule/services/accuweather-api.service.ts","./src/app/weatherModule/services/favorites.service.ts","./src/app/weatherModule/services/geolocation.service.ts","./src/app/weatherModule/services/repository-urls.ts","./src/app/weatherModule/services/tempSelection.service.ts","./src/app/weatherModule/services/weatherAppStoreFacade.service.ts","./src/app/weatherModule/store/actions/areaWeather.action.ts","./src/app/weatherModule/store/actions/favorites.actions.ts","./src/app/weatherModule/store/effects/areaWeather.effects.ts","./src/app/weatherModule/store/reducers/areaWeather.reducer.ts","./src/app/weatherModule/store/reducers/favorites.reducer.ts","./src/app/weatherModule/store/reducers/index.ts","./src/app/weatherModule/store/selectors/areaWeather.selectors.ts","./src/app/weatherModule/store/selectors/common.ts","./src/app/weatherModule/store/selectors/favorites.selectors.ts","./src/app/weatherModule/store/selectors/index.ts","./src/app/weatherModule/store/states/areaWeather.state.ts","./src/app/weatherModule/store/states/favorites.state.ts","./src/app/weatherModule/weather-routing.module.ts","./src/app/weatherModule/weather.component.ts","./src/app/weatherModule/weather.component.html","./src/app/weatherModule/weather.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA,sBAAsB,mEAAmE;AACzF;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE,8CAA8C,6BAA6B;AAC3E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA,yDAAyD;AACzD;AACA,yEAAyE,EAAE;AAC3E;AACA,0EAA0E;AAC1E;AACA,oFAAoF,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AAC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","file":"weatherModule-weather-module-es2015.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction stringifiable(obj) {\n    // Safely stringify Object.create(null)\n    /* istanbul ignore next */\n    return typeof obj === 'object' && !('toString' in obj) ?\n        Object.prototype.toString.call(obj).slice(8, -1) :\n        obj;\n}\nvar isProduction = typeof process === 'object' && process.env.NODE_ENV === 'production';\nfunction invariant(condition, message) {\n    if (!condition) {\n        /* istanbul ignore next */\n        if (isProduction) {\n            throw new Error('Invariant failed');\n        }\n        throw new Error(message());\n    }\n}\nexports.invariant = invariant;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\nvar toString = Object.prototype.toString;\nfunction type(obj) {\n    return toString.call(obj).slice(8, -1);\n}\nvar assign = Object.assign || /* istanbul ignore next */ (function (target, source) {\n    getAllKeys(source).forEach(function (key) {\n        if (hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n});\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function'\n    ? function (obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)); }\n    /* istanbul ignore next */\n    : function (obj) { return Object.keys(obj); };\nfunction copy(object) {\n    return Array.isArray(object)\n        ? assign(object.constructor(object.length), object)\n        : (type(object) === 'Map')\n            ? new Map(object)\n            : (type(object) === 'Set')\n                ? new Set(object)\n                : (object && typeof object === 'object')\n                    ? assign(Object.create(Object.getPrototypeOf(object)), object)\n                    /* istanbul ignore next */\n                    : object;\n}\nvar Context = /** @class */ (function () {\n    function Context() {\n        this.commands = assign({}, defaultCommands);\n        this.update = this.update.bind(this);\n        // Deprecated: update.extend, update.isEquals and update.newContext\n        this.update.extend = this.extend = this.extend.bind(this);\n        this.update.isEquals = function (x, y) { return x === y; };\n        this.update.newContext = function () { return new Context().update; };\n    }\n    Object.defineProperty(Context.prototype, \"isEquals\", {\n        get: function () {\n            return this.update.isEquals;\n        },\n        set: function (value) {\n            this.update.isEquals = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Context.prototype.extend = function (directive, fn) {\n        this.commands[directive] = fn;\n    };\n    Context.prototype.update = function (object, $spec) {\n        var _this = this;\n        var spec = (typeof $spec === 'function') ? { $apply: $spec } : $spec;\n        if (!(Array.isArray(object) && Array.isArray(spec))) {\n            invariant(!Array.isArray(spec), function () { return \"update(): You provided an invalid spec to update(). The spec may \" +\n                \"not contain an array except as the value of $set, $push, $unshift, \" +\n                \"$splice or any custom command allowing an array value.\"; });\n        }\n        invariant(typeof spec === 'object' && spec !== null, function () { return \"update(): You provided an invalid spec to update(). The spec and \" +\n            \"every included key path must be plain objects containing one of the \" +\n            (\"following commands: \" + Object.keys(_this.commands).join(', ') + \".\"); });\n        var nextObject = object;\n        getAllKeys(spec).forEach(function (key) {\n            if (hasOwnProperty.call(_this.commands, key)) {\n                var objectWasNextObject = object === nextObject;\n                nextObject = _this.commands[key](spec[key], nextObject, spec, object);\n                if (objectWasNextObject && _this.isEquals(nextObject, object)) {\n                    nextObject = object;\n                }\n            }\n            else {\n                var nextValueForKey = type(object) === 'Map'\n                    ? _this.update(object.get(key), spec[key])\n                    : _this.update(object[key], spec[key]);\n                var nextObjectValue = type(nextObject) === 'Map'\n                    ? nextObject.get(key)\n                    : nextObject[key];\n                if (!_this.isEquals(nextValueForKey, nextObjectValue)\n                    || typeof nextValueForKey === 'undefined'\n                        && !hasOwnProperty.call(object, key)) {\n                    if (nextObject === object) {\n                        nextObject = copy(object);\n                    }\n                    if (type(nextObject) === 'Map') {\n                        nextObject.set(key, nextValueForKey);\n                    }\n                    else {\n                        nextObject[key] = nextValueForKey;\n                    }\n                }\n            }\n        });\n        return nextObject;\n    };\n    return Context;\n}());\nexports.Context = Context;\nvar defaultCommands = {\n    $push: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$push');\n        return value.length ? nextObject.concat(value) : nextObject;\n    },\n    $unshift: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$unshift');\n        return value.length ? value.concat(nextObject) : nextObject;\n    },\n    $splice: function (value, nextObject, spec, originalObject) {\n        invariantSplices(nextObject, spec);\n        value.forEach(function (args) {\n            invariantSplice(args);\n            if (nextObject === originalObject && args.length) {\n                nextObject = copy(originalObject);\n            }\n            splice.apply(nextObject, args);\n        });\n        return nextObject;\n    },\n    $set: function (value, _nextObject, spec) {\n        invariantSet(spec);\n        return value;\n    },\n    $toggle: function (targets, nextObject) {\n        invariantSpecArray(targets, '$toggle');\n        var nextObjectCopy = targets.length ? copy(nextObject) : nextObject;\n        targets.forEach(function (target) {\n            nextObjectCopy[target] = !nextObject[target];\n        });\n        return nextObjectCopy;\n    },\n    $unset: function (value, nextObject, _spec, originalObject) {\n        invariantSpecArray(value, '$unset');\n        value.forEach(function (key) {\n            if (Object.hasOwnProperty.call(nextObject, key)) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                delete nextObject[key];\n            }\n        });\n        return nextObject;\n    },\n    $add: function (values, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$add');\n        invariantSpecArray(values, '$add');\n        if (type(nextObject) === 'Map') {\n            values.forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                if (nextObject === originalObject && nextObject.get(key) !== value) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.set(key, value);\n            });\n        }\n        else {\n            values.forEach(function (value) {\n                if (nextObject === originalObject && !nextObject.has(value)) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.add(value);\n            });\n        }\n        return nextObject;\n    },\n    $remove: function (value, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$remove');\n        invariantSpecArray(value, '$remove');\n        value.forEach(function (key) {\n            if (nextObject === originalObject && nextObject.has(key)) {\n                nextObject = copy(originalObject);\n            }\n            nextObject.delete(key);\n        });\n        return nextObject;\n    },\n    $merge: function (value, nextObject, _spec, originalObject) {\n        invariantMerge(nextObject, value);\n        getAllKeys(value).forEach(function (key) {\n            if (value[key] !== nextObject[key]) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject[key] = value[key];\n            }\n        });\n        return nextObject;\n    },\n    $apply: function (value, original) {\n        invariantApply(value);\n        return value(original);\n    },\n};\nvar defaultContext = new Context();\nexports.isEquals = defaultContext.update.isEquals;\nexports.extend = defaultContext.extend;\nexports.default = defaultContext.update;\n// @ts-ignore\nexports.default.default = module.exports = assign(exports.default, exports);\n// invariants\nfunction invariantPushAndUnshift(value, spec, command) {\n    invariant(Array.isArray(value), function () { return \"update(): expected target of \" + stringifiable(command) + \" to be an array; got \" + stringifiable(value) + \".\"; });\n    invariantSpecArray(spec[command], command);\n}\nfunction invariantSpecArray(spec, command) {\n    invariant(Array.isArray(spec), function () { return \"update(): expected spec of \" + stringifiable(command) + \" to be an array; got \" + stringifiable(spec) + \". \" +\n        \"Did you forget to wrap your parameter in an array?\"; });\n}\nfunction invariantSplices(value, spec) {\n    invariant(Array.isArray(value), function () { return \"Expected $splice target to be an array; got \" + stringifiable(value); });\n    invariantSplice(spec.$splice);\n}\nfunction invariantSplice(value) {\n    invariant(Array.isArray(value), function () { return \"update(): expected spec of $splice to be an array of arrays; got \" + stringifiable(value) + \". \" +\n        \"Did you forget to wrap your parameters in an array?\"; });\n}\nfunction invariantApply(fn) {\n    invariant(typeof fn === 'function', function () { return \"update(): expected spec of $apply to be a function; got \" + stringifiable(fn) + \".\"; });\n}\nfunction invariantSet(spec) {\n    invariant(Object.keys(spec).length === 1, function () { return \"Cannot have more than one key in an object with $set\"; });\n}\nfunction invariantMerge(target, specValue) {\n    invariant(specValue && typeof specValue === 'object', function () { return \"update(): $merge expects a spec of type 'object'; got \" + stringifiable(specValue); });\n    invariant(target && typeof target === 'object', function () { return \"update(): $merge expects a target of type 'object'; got \" + stringifiable(target); });\n}\nfunction invariantMapOrSet(target, command) {\n    var typeOfTarget = type(target);\n    invariant(typeOfTarget === 'Map' || typeOfTarget === 'Set', function () { return \"update(): \" + stringifiable(command) + \" expects a target of type Set or Map; got \" + stringifiable(typeOfTarget); });\n}\n","import { extend } from 'immutability-helper';\n\nimport { Context } from 'immutability-helper';\n\n\nconst UpdateContext = new Context();\n\n\nconst updateInternal = UpdateContext.update\n\nextend('$auto', function(value, object) {\n  return object ?\n    updateInternal(object, value):\n    updateInternal({}, value);\n});\nextend('$autoArray', function(value, object) {\n  return object ?\n    updateInternal(object, value):\n    updateInternal([], value);\n});\n\nexport const update = updateInternal;\n","import { Component, OnInit, NgModule } from '@angular/core';\nimport { FavoritesService } from '../../services/favorites.service';\nimport { CityWeather } from '../../models/CityWeather';\nimport { Favorite } from '../../models/favorite';\nimport { tap, distinctUntilChanged, take } from 'rxjs/operators';\n\n@Component({\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss'],\n})\nexport class FavoritesComponent implements OnInit {\n  favorites: CityWeather[] = [];\n\n\n  constructor(public favoritesService: FavoritesService) {\n    this.favoritesService.getFavorites().pipe(\n      // distinctUntilChanged((a,b) => JSON.stringify(a) === JSON.stringify(b)),\n      tap(a => {\n        this.favorites = a;\n      })\n    ).subscribe();\n  }\n\n  ngOnInit(): void {}\n\n  extractName(link: string) {\n    return this.extractFromArrayAt(link.split('/'), 4);\n  }\n\n  extractKey(link: string) {\n    return this.extractFromArrayAt(link.split('/'), 3);\n  }\n\n  extractFromArrayAt(arr: any[], index: number) {\n    return arr[arr.length - index];\n  }\n\n  removeFromFavorites(weather: CityWeather) {\n    this.favoritesService.removeFromFavorites(\n      this.extractName(weather.Link),\n      this.extractKey(weather.Link)\n    );\n  }\n}\n","<div class=\"grid-container\">\n  <mat-card\n    class=\"card\"\n    *ngFor=\"let weather of favorites\"\n  >\n    <mat-card-header>\n      <img\n        mat-card-avatar\n        class=\"header-image\"\n        src=\"assets/weather-icons/{{ weather[0].WeatherIcon }}.png\"\n      />\n      <mat-card-title>{{extractName(weather[0].Link) | titlecase}}</mat-card-title>\n      <mat-card-subtitle>{{weather[0].LocalObservationDateTime | date: \"EEEE\"}}</mat-card-subtitle>\n      <div class=\"spacer\"></div>\n      <mat-icon\n        aria-hidden=\"false\"\n        aria-label=\"remove\"\n        (click)=\"removeFromFavorites(weather[0])\">highlight_off</mat-icon\n      >\n    </mat-card-header>\n    <mat-card-content class=\"card-content\">\n      <p class=\"weather-text\">\n        {{ weather[0].WeatherText }}\n      </p>\n      <p class=\"weather-temp\">\n        {{ weather[0].Temperature.Metric.Value + \"\" + weather[0].Temperature.Metric.Unit }}\n      </p>\n    </mat-card-content>\n  </mat-card>\n</div>\n<div class=\"empty-fav\" *ngIf=\"favorites.length === 0\">\n  <h1>Favorites Empty</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit, ViewContainerRef, ComponentFactoryResolver, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() clickFavorite: EventEmitter<any> = new EventEmitter();\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  favoriteClicked() {\n    this.clickFavorite.emit();\n  }\n\n\n}\n","<mat-toolbar color=\"primary\">\n  <span>Weather App</span>\n      <span class=\"spacer\"></span>\n      <button mat-icon-button class=\"icon\" aria-label=\"icon-button with menu icon\" routerLink=\"weatherbycity\">\n        <mat-icon>cloud</mat-icon>\n      </button>\n      <button mat-icon-button class=\"icon\" aria-label=\"icon-button with menu icon\" routerLink=\"/weather/favorites\">\n        <mat-icon>favorite</mat-icon>\n      </button>\n</mat-toolbar>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DailyForecast } from 'src/app/weatherModule/models/forcast';\n\n@Component({\n  selector: 'app-forcast-card',\n  templateUrl: './forcast-card.component.html',\n  styleUrls: ['./forcast-card.component.css']\n})\nexport class ForcastCardComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() forcast: DailyForecast;\n\n  ngOnInit(): void { }\n\n}\n","<mat-card class=\"card\">\n  <mat-card-header class=\"card-header\">\n    <mat-card-title>{{ this.forcast.Date | date:'EEEE' }}</mat-card-title>\n  </mat-card-header>\n  <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\n  <mat-card-content class=\"card-content\">\n    <img mat-card-avatar class=\"header-image\" src=\"assets/weather-icons/{{this.forcast.Day.Icon}}.png\">\n    <mat-card-title>{{ this.forcast.Temperature.Maximum.Value + '' + this.forcast.Temperature.Maximum.Unit}}</mat-card-title>\n    <label>{{ this.forcast.Day.IconPhrase }}</label>\n  </mat-card-content>\n  <hr>\n  <mat-card-footer class=\"card-footer\">\n    <img mat-card-avatar class=\"example-header-image\" src=\"assets/weather-icons/{{this.forcast.Night.Icon}}.png\">\n    <mat-card-subtitle class=\"night-text\"> Night {{ this.forcast.Temperature.Minimum.Value + '' + this.forcast.Temperature.Minimum.Unit}} - {{ this.forcast.Night.IconPhrase }}</mat-card-subtitle>\n  </mat-card-footer>\n</mat-card>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AccuweatherApiService } from '../../services/accuweather-api.service';\nimport {\n  filter,\n  takeUntil,\n  debounceTime,\n  switchMap,\n  map,\n  tap,\n  count,\n  skip,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { ModuleState } from '../../store/states';\nimport { autoCompleteOption } from '../../models/autocomplete';\nimport { WeatherAppStoreService } from '../../services/weatherAppStoreFacade.service';\nimport { GeolocationService } from '../../services/geolocation.service';\n\n@Component({\n  selector: 'app-weatherbycity',\n  templateUrl: './weatherbycity.component.html',\n  styleUrls: ['./weatherbycity.component.css'],\n})\nexport class WeatherbycityComponent implements OnInit, OnDestroy {\n  autoCompleteValue: any;\n  autoCompletedSuggestions: any[];\n  autoCompleteInput: Subject<String> = new Subject<String>();\n\n  constructor(\n    private accuweatherApiService: AccuweatherApiService,\n    private geoLocationService: GeolocationService,\n    public storeFacade: WeatherAppStoreService\n  ) {\n    this.autoCompleteInput\n      .pipe(\n        filter((data: string) => data.length > 0),\n        debounceTime(900),\n        switchMap((data: string) => {\n          const a = this.accuweatherApiService.getAutoComplete(data);\n          return a;\n        })\n      )\n      .subscribe((suggestions: autoCompleteOption[]) => {\n        this.autoCompletedSuggestions = suggestions;\n      }, console.error);\n\n    this.geoLocationService\n      .getAccuWeatherByLocation()\n      .pipe(\n        tap((location) => {\n          this.storeFacade.setAreaWeather(location.Key, location.LocalizedName);\n        })\n      )\n      .subscribe();\n  }\n\n  selectSuggestion(option: autoCompleteOption) {\n    this.autoCompleteValue = option.LocalizedName;\n    this.storeFacade.setAreaWeather(option.Key, option.LocalizedName);\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {}\n}\n","<div class=\"city-search\">\n  <mat-form-field class=\"city-search-input\">\n    <mat-label>Search By City</mat-label>\n    <input\n      type=\"text\"\n      placeholder=\"search\"\n      matInput\n      [ngModel]=\"autoCompleteValue\"\n      (input)=\"autoCompleteInput.next($event.target.value)\"\n      [matAutocomplete]=\"auto\"\n      appEnglishOnly\n    />\n    <mat-icon matSuffix>search</mat-icon>\n  </mat-form-field>\n  <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n    <mat-option\n      *ngFor=\"let suggestion of autoCompletedSuggestions\"\n      [value]=\"suggestion.LocalizedName\"\n      (click)=\"selectSuggestion(suggestion)\"\n    >\n      {{ suggestion.LocalizedName }}\n    </mat-option>\n  </mat-autocomplete>\n</div>\n<div class=\"content-wrapper\">\n  <ng-container *ngIf=\"this.storeFacade.areaWeather$ | async as areaWeather\">\n    <mat-card\n      class=\"weather-card\"\n      *ngIf=\"this.storeFacade.currentCityName$ | async as areaName\"\n    >\n      <mat-card-header class=\"weather-card-header\">\n        <img\n          mat-card-avatar\n          src=\"assets/weather-icons/{{\n            this.storeFacade.cuurentWeatherIcon$ | async\n          }}.png\"\n          class=\"weather-header-image\"\n        />\n        <mat-card-title class=\"card-city-name\">{{\n          this.storeFacade.currentCityName$ | async\n        }}</mat-card-title>\n        <mat-card-subtitle class=\"city-temp\"\n          >{{ this.storeFacade.currentCityTemp$ | async\n          }}<span>&#176;</span></mat-card-subtitle\n        >\n        <span class=\"spacer\"></span>\n        <mat-card-actions>\n          <ng-container\n            *ngIf=\"\n              this.storeFacade.isInFavorites(areaWeather.AreaKey) | async as inFavorite\n            \"\n          >\n            <button\n              mat-raised-button\n              color=\"{{ inFavorite }}\"\n              (click)=\"\n                inFavorite === 'accent'\n                  ? this.storeFacade.removeFromFavorites(areaName, areaWeather.AreaKey)\n                  : this.storeFacade.addToFavorites(areaName, areaWeather.AreaKey)\n              \"\n            >\n              <mat-icon>favorite</mat-icon>\n            </button>\n          </ng-container>\n        </mat-card-actions>\n      </mat-card-header>\n\n      <mat-card-content class=\"main-card-content\">\n        <h1>{{ this.storeFacade.currentWeatherText$ | async }}</h1>\n        <div class=\"forcast\">\n          <app-forcast-card\n            *ngFor=\"let forcast of this.storeFacade.fiveDayForcast$ | async\"\n            [forcast]=\"forcast\"\n          >\n          </app-forcast-card>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </ng-container>\n</div>\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appEnglishOnly]'\n})\nexport class EnglishOnlyDirective {\n\n  constructor(private _el:ElementRef) { }\n\n  @HostListener('input', ['$event']) onInputChange(event) {\n    const initalValue = this._el.nativeElement.value;\n    this._el.nativeElement.value = initalValue.replace(/[^a-zA-Z ]*/g, '');\n    if ( initalValue !== this._el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { repositoryUrl } from './repository-urls';\nimport { CityWeather } from '../models/CityWeather';\nimport { Forcast } from '../models/forcast';\nimport { autoCompleteOption } from '../models/autocomplete';\nimport { AccuWeatherGeo } from '../models/accuWeatherGeo';\nimport { environment } from '../../../environments/environment';\nimport { GeoLocation } from '../models/geoLocation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccuweatherApiService {\n  API_KEY = environment.API_KEY;\n\n  constructor(private httpClient: HttpClient) {}\n\n  getRequest(url, p?) {\n    if (p) {\n      const params = new HttpParams({\n        fromObject: { apikey: this.API_KEY, ...p },\n      });\n      return this.httpClient.get<any>(url, { params });\n    } else {\n      const params = new HttpParams({ fromObject: { apikey: this.API_KEY } });\n      return this.httpClient.get<any>(url, { params });\n    }\n  }\n\n  getGeoPosition(geoPosition: GeoLocation): Observable<AccuWeatherGeo> {\n    return this.getRequest(\n      repositoryUrl.geoposition.geoPosition,\n      { q: `${geoPosition.lat},${geoPosition.lon}`}\n    );\n  }\n\n  getAutoComplete(key: string): Observable<autoCompleteOption[]> {\n    return this.getRequest(repositoryUrl.geoposition.autoComplete, {q: `${key}`});\n  }\n\n  get5DaysOfForecasts(key: string, metric: boolean = true): Observable<Forcast> {\n    return this.getRequest(\n      repositoryUrl.forcasts.getFiveDaysForcast(key),\n      {metric: metric}\n    );\n  }\n\n  getCurrentConditions(key: string): Observable<CityWeather> {\n    return this.getRequest(\n      repositoryUrl.currentConditions.getCurrentCondition(key)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WeatherAppStoreService } from './weatherAppStoreFacade.service';\nimport { switchMap, take, map } from 'rxjs/operators';\nimport { AccuweatherApiService } from './accuweather-api.service';\nimport { Observable, zip, of } from 'rxjs';\nimport { CityWeather } from '../models/CityWeather';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FavoritesService {\n  constructor(\n    private storeFacade: WeatherAppStoreService,\n    private accuWeatherApi: AccuweatherApiService\n  ) {}\n\n  getFavorites() {\n    return this.storeFacade.favorites$.pipe(\n      switchMap((f) => {\n        let data: Observable<CityWeather>[] = [];\n        if(f.length === 0)\n        {\n          return of([]);\n        }\n        f.forEach((element) => {\n          data.push(this.accuWeatherApi.getCurrentConditions(element.Key));\n        });\n        return zip(...data);\n      }),\n      map(zip => zip)\n    );\n  }\n\n  getCurrentWeather(key: string) {\n    return this.accuWeatherApi.getCurrentConditions(key);\n  }\n\n  removeFromFavorites(name: string, key: string) {\n    this.storeFacade.removeFromFavorites(key, name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AccuweatherApiService } from './accuweather-api.service';\nimport { environment } from 'src/environments/environment';\nimport { GeoLocation } from '../models/geoLocation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeolocationService {\n  private geolocation: BehaviorSubject<GeoLocation> = new BehaviorSubject<GeoLocation>(null);\n\n  constructor(private accuweatherApiService:AccuweatherApiService) {\n    if (!navigator.geolocation) {\n      console.log('location is not supported');\n    }\n\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.updatgeGeolocatgion({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude,\n      } as GeoLocation);\n    });\n  }\n\n  updatgeGeolocatgion(location: GeoLocation) {\n    this.geolocation.next(location);\n  }\n\n  getGeolocation(): GeoLocation {\n    return this.geolocation.value;\n  }\n\n  getAccuWeatherByLocation() {\n    if(this.geolocation.value !== null){\n      return this.accuweatherApiService.getGeoPosition({lat: this.geolocation.value.lat, lon: this.geolocation.value.lon} as GeoLocation);\n    }else {\n      return this.accuweatherApiService.getGeoPosition(environment.DefaultLocation);\n    }\n  }\n}\n","\nimport { environment } from '../../../environments/environment';\n\nconst baseUrl = environment.apiUrl;\n\nconst repositoryUrlGeoPositionUrl = baseUrl + '/locations/v1';\nconst repositoryUrlGeoPositioController = {\n  geoPosition: repositoryUrlGeoPositionUrl + '/cities/geoposition/search',\n  autoComplete: repositoryUrlGeoPositionUrl + '/cities/autocomplete',\n}\n\n\nconst repositoryUrlForcastUrl = baseUrl + '/forecasts/v1';\nconst repositoryUrlForcastController = {\n  getFiveDaysForcast: ( key:string ) => `${repositoryUrlForcastUrl}/daily/5day/${key}`\n}\n\n\nconst repositoryUrlCurrentConditionUrl = baseUrl;\nconst repositoryUrlCurrentConditionController = {\n  getCurrentCondition: (key:string) => `${repositoryUrlCurrentConditionUrl}/currentconditions/v1/${key}`\n}\n\n\nexport const repositoryUrl = {\n  geoposition:repositoryUrlGeoPositioController,\n  forcasts: repositoryUrlForcastController,\n  currentConditions: repositoryUrlCurrentConditionController\n}\n","import { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TempSelectionService {\n\n  private isCelsiusSubject = new BehaviorSubject<boolean>(true);\n  isCelsius$ = this.isCelsiusSubject.asObservable();\n\n  constructor() {}\n\n  getIsCelsius = (): boolean => {\n    return this.isCelsiusSubject.value;\n  }\n\n  setIsCelsius = (isCelsius: boolean) => {\n    this.isCelsiusSubject.next(isCelsius);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { ModuleState } from '../store/states/index';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { weatherAppSelectors } from '../store/selectors';\nimport { DailyForecast } from '../models/forcast';\nimport { autoCompleteOption } from '../models/autocomplete';\nimport { weatherAppSelector } from '../store/selectors/common';\nimport { Favorite } from '../models/favorite';\nimport { favoriteAction } from '../store/actions/favorites.actions';\nimport { TempSelectionService } from './tempSelection.service';\nimport { async } from '@angular/core/testing';\nimport { areaWeatherAction } from '../store/actions/areaWeather.action';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherAppStoreService {\n  constructor(\n    private _store: Store<ModuleState>,\n    private tempSelectionService: TempSelectionService\n  ) {}\n\n  areaWeather$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaWeather),\n  );\n\n  currentCityName$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaName),\n    filter((option) => option !== null)\n  );\n  currentCityKey$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaKey)\n  );\n\n  currentCityTemp$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaTemp),\n    filter((temp) => temp !== null),\n    map((temp) => {\n      if (this.tempSelectionService.getIsCelsius()) {\n        return temp.Metric.Value + ' ' + temp.Metric.Unit;\n      }\n      return temp.Imperial.Value + ' ' + temp.Imperial.Unit;\n    })\n  );\n  cuurentWeatherIcon$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaWeatherIcon),\n    filter((a) => a !== null)\n  );\n\n  currentWeatherText$ = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaWeatherText),\n    filter((a) => a !== null)\n  );\n\n  fiveDayForcast$: Observable<DailyForecast[]> = this._store.pipe(\n    select(weatherAppSelectors.areaWeatherSelectors.areaWeatherForcast),\n    filter((forcast) => forcast !== null),\n    map((forcast) => forcast.DailyForecasts)\n  );\n\n  favorites$: Observable<Favorite[]> = this._store.pipe(\n    select(weatherAppSelectors.favoritesSelectors.getFavorites),\n    filter((a) => a !== null)\n  );\n\n  // currentSelectedCity$: Observable<autoCompleteOption> = this._store.pipe(\n  //   select(weatherAppSelectors.optionSelectors.selectedCity),\n  //   tap((a) => a)\n  // );\n\n  setAreaWeather = (key: string, name: string) => {\n    this._store.dispatch(\n      areaWeatherAction.getAreaWeather({\n        payload: { areaKey: key, areaName: name },\n      })\n    );\n  };\n\n  addToFavorites = (key: string, name: string) => {\n    this._store.dispatch(\n      favoriteAction.addFavorite({\n        payload: { fav: { Key: key, LocalizedName: name } },\n      })\n    );\n  };\n\n  removeFromFavorites = (key: string, name: string) => {\n    this._store.dispatch(\n      favoriteAction.removeFavorite({\n        payload: { fav: { Key: key, LocalizedName: name } },\n      })\n    );\n  };\n  isInFavorites = (key: string): Observable<'accent' | 'primary'> => {\n    return this._store.pipe(\n      select(weatherAppSelectors.favoritesSelectors.getFavorites),\n      map((favorites) => {\n        return favorites.findIndex((f) => f.Key === key) >= 0\n          ? 'accent'\n          : 'primary';\n      })\n    );\n  };\n}\n","import { createAction, props } from '@ngrx/store';\nimport { AreaWeather } from '../../models/areaWeather';\n\nenum AreaWeatherActionTypes {\n  GET_AREA_WEATHER = '[Area Weather] getAreaWeather',\n  APPLY_AREA_WEATHER = '[Area Weather] applyAreaWeather'\n}\n\nexport const areaWeatherAction = {\n  getAreaWeather: createAction(\n    AreaWeatherActionTypes.GET_AREA_WEATHER,\n    props<{ payload: { areaKey: string, areaName: string }}>()\n  ),\n  applyAreaWeather: createAction(\n    AreaWeatherActionTypes.APPLY_AREA_WEATHER,\n    props< { payload: { areaWeather: AreaWeather }}>()\n  )\n}\n","import { createAction, props } from '@ngrx/store';\nimport { autoCompleteOption } from '../../models/autocomplete';\nimport { Favorite } from '../../models/favorite';\n\n\nenum FavoritesActionType{\n  ADD_FAVORITE = '[Favorites] addFavorite',\n  REMOVE_FAVORITE = '[Favorites] removeFavorite',\n  APPLY_FAVORITE ='[Favorites] applyFavorite'\n}\n\n\nexport const favoriteAction ={\n  addFavorite: createAction(\n    FavoritesActionType.ADD_FAVORITE,\n    props<{payload: { fav: Favorite }}>()\n  ),\n  removeFavorite: createAction(\n    FavoritesActionType.REMOVE_FAVORITE,\n    props<{payload: { fav: Favorite }}>()\n  ),\n    applyFavorite: createAction(\n      FavoritesActionType.APPLY_FAVORITE,\n      props<{ payload: { favorits: string[] }}>()\n    )\n}\n","import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { AccuweatherApiService } from '../../services/accuweather-api.service';\nimport { Store } from '@ngrx/store';\nimport { ModuleState } from '../states';\nimport { areaWeatherAction } from '../actions/areaWeather.action';\nimport { switchMap, map } from 'rxjs/operators';\nimport { of, zip } from 'rxjs';\n\n@Injectable()\nexport class AreaWeatherEffect {\n  getAreaWeather$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(areaWeatherAction.getAreaWeather),\n      switchMap((val) => {\n        return zip(\n          of(val.payload),\n          this.accuweatherApiService.getCurrentConditions(val.payload.areaKey),\n          this.accuweatherApiService.get5DaysOfForecasts(val.payload.areaKey, true)\n        );\n      }),\n      map(([payload, cityWeather, forcast]) => {\n        return areaWeatherAction.applyAreaWeather({\n          payload: {\n            areaWeather: {\n              AreaKey: payload.areaKey,\n              AreaName: payload.areaName,\n              ...cityWeather[0],\n              Forcast: forcast,\n            },\n          },\n        });\n      })\n    );\n  });\n\n  constructor(\n    private actions$: Actions,\n    private accuweatherApiService: AccuweatherApiService,\n    private _store: Store<ModuleState>\n  ) {}\n}\n","import * as fromAreaWeather from '../states/areaWeather.state';\nimport { areaWeatherAction } from '../actions/areaWeather.action';\nimport { AreaWeather } from '../../models/areaWeather';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport { update } from 'src/app/utils/update';\n\nconst areaWeatherReducer = createReducer(\n  fromAreaWeather.initialState,\n  on(areaWeatherAction.applyAreaWeather, (state, action) => {\n    return update(state, { $set: action.payload.areaWeather });\n  })\n);\n\nexport function reducer(state: AreaWeather, action: Action) {\n  return areaWeatherReducer(state, action);\n}\n","import { createReducer, on, Action } from '@ngrx/store';\nimport { update } from '../../../utils/update';\nimport { favoriteAction } from '../actions/favorites.actions';\nimport * as fromFavorites from '../states/favorites.state';\nimport { autoCompleteOption } from '../../models/autocomplete';\nimport { Favorite } from '../../models/favorite';\n\nconst favoritesReducer = createReducer(\n  fromFavorites.initialState,\n  on(favoriteAction.addFavorite, (state, action) => {\n    if (\n      state &&\n      state.findIndex((arr) => arr.Key === action.payload.fav.Key) > -1\n    ) {\n      return state;\n    } else {\n      return update(state, {\n        $push: [{\n          Key: action.payload.fav.Key,\n          LocalizedName: action.payload.fav.LocalizedName,\n        }],\n      });\n    }\n  }),\n  on(favoriteAction.removeFavorite, (state, action) => {\n    if (!state) {\n      return state;\n    }\n    let index = state.findIndex((arr) => arr.Key == action.payload.fav.Key);\n    if (index < 0) {\n      return state;\n    } else {\n      return update(state, { $splice: [[index, 1]] });\n    }\n  })\n);\n\nexport function reducer(state: autoCompleteOption[], action: Action) {\n  return favoritesReducer(state, action);\n}\n","import * as FavoritesReducer from './favorites.reducer';\nimport * as AreaWeatherReducer from './areaWeather.reducer';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { ModuleState } from '../states/index';\n\nexport const CITY_WEATHER_FEATURE = 'CITY_WEATHER_FEATURE';\n\nexport const reducers: ActionReducerMap<ModuleState> = {\n  favorites: FavoritesReducer.reducer,\n  areaWeather: AreaWeatherReducer.reducer,\n}\n","import { createSelector } from '@ngrx/store';\nimport { weatherAppSelector } from './common';\nimport { ModuleState } from '../states';\n\nexport const areaWeatherSelectors = {\n  areaWeather: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather\n  ),\n  areaName: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.AreaName\n  ),\n  areaKey: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.AreaKey\n  ),\n  areaTemp: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.Temperature\n  ),\n  areaWeatherText: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.WeatherText\n  ),\n  areaWeatherIcon: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.WeatherIcon\n  ),\n  areaWeatherForcast: createSelector(\n    weatherAppSelector,\n    (state: ModuleState) => state.areaWeather.Forcast\n  ),\n};\n","import { createFeatureSelector } from '@ngrx/store';\nimport { ModuleState } from '../states';\nimport * as fromModule from '../reducers';\n\n\nexport const weatherAppSelector = createFeatureSelector<ModuleState>(fromModule.CITY_WEATHER_FEATURE);\n","import { createSelector } from '@ngrx/store';\nimport { weatherAppSelector } from './common';\nimport { ModuleState } from '../states';\n\n\nexport const favoritesSelectors = {\n  getFavorites: createSelector(\n    weatherAppSelector,\n    (state:ModuleState) => state.favorites),\n}\n","import { favoritesSelectors } from './favorites.selectors';\nimport { areaWeatherSelectors } from './areaWeather.selectors';\n\nexport const weatherAppSelectors = {\n  areaWeatherSelectors: areaWeatherSelectors,\n  favoritesSelectors: favoritesSelectors\n}\n","import { AreaWeather } from '../../models/areaWeather';\n\nexport class AreaWeatherState {\n  areaWeather: AreaWeather;\n}\n\nexport const initialState: AreaWeather = null;\n","import { autoCompleteOption } from '../../models/autocomplete';\nimport { Favorite } from '../../models/favorite';\n\n\nexport interface FavoriteState {\n  favorites: Favorite[];\n}\n\nexport const initialState:Favorite[] = [];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WeatherComponent } from './weather.component';\nimport { WeatherbycityComponent } from './components/weatherbycity/weatherbycity.component';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\n\nconst routes: Routes =\n[\n  {\n    path: '', component: WeatherComponent, children:\n      [\n        { path: '',redirectTo: 'weatherbycity', pathMatch: 'full'},\n        { path: 'weatherbycity', component: WeatherbycityComponent },\n        { path: 'favorites', component: FavoritesComponent }\n      ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n})\nexport class WeatherComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WeatherRoutingModule } from './weather-routing.module';\nimport { WeatherComponent } from './weather.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport {FooterComponent } from './components/footer/footer.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WeatherbycityComponent } from './components/weatherbycity/weatherbycity.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { ForcastCardComponent } from './components/weatherbycity/forcast-card/forcast-card.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { httpInterceptorProviders } from \"./interceptors\";\nimport { StoreModule } from '@ngrx/store';\nimport * as fromModule from './store/reducers'\nimport { EffectsModule } from '@ngrx/effects';\nimport {MatButtonModule} from '@angular/material/button';\nimport { EnglishOnlyDirective } from './directives/english-only.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AreaWeatherEffect } from './store/effects/areaWeather.effects';\n\n\n@NgModule({\n  declarations: [WeatherComponent, HeaderComponent, FooterComponent, WeatherbycityComponent, ForcastCardComponent, EnglishOnlyDirective, FavoritesComponent],\n  imports: [\n    CommonModule,\n    WeatherRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatCardModule,\n    MatAutocompleteModule,\n    EffectsModule.forFeature([AreaWeatherEffect]),\n    StoreModule.forFeature(fromModule.CITY_WEATHER_FEATURE,fromModule.reducers),\n  ],\n  providers: []\n})\nexport class WeatherModule { }\n"],"sourceRoot":"webpack:///"}